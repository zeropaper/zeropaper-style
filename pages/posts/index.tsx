import styles from '../../styles/Home.module.css'
import Head from 'next/head'
import Link from 'next/link'
import { useTina } from 'tinacms/dist/edit-state'

import { ExperimentalGetTinaClient } from '../../.tina/__generated__/types'
import Grid from '../../components/Grid'
import { getPosts } from '../../contexts/Posts'

// import { getPosts } from './[slug]'

export type AsyncReturnType<T extends (...args: any) => Promise<any>> =
  T extends (...args: any) => Promise<infer R> ? R : any

const Posts = (props: AsyncReturnType<typeof getStaticProps>['props']) => {
  const tinaData = useTina({
    query: props.query,
    data: props.data,
    variables: props.vars
  })
  const data = tinaData.data?.getPageDocument?.data || {}

  console.info('props.data', props.data)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Posts</h1>

        <Grid blocks={data.blocks || []} tinafield="blocks" />

        <section>
          <ul>
            {props.data.posts.map((post) => (
              <li key={post.node.sys.filename}>
                <Link href={`/posts/${post.node.sys.filename}`}>
                  <a>{post.node.sys.filename}</a>
                </Link>
              </li>
            ))}
          </ul>
        </section>
      </main>
    </div>
  )
}

export default Posts

// Data Fetching
export const getStaticProps = async function () {
  const client = ExperimentalGetTinaClient()
  const vars = { relativePath: 'posts-data.json' }
  const res = await client.getPageDocument(vars)
  const postsListData = await getPosts()
  console.info('postsListData', postsListData)
  return {
    props: {
      query: res.query,
      data: {
        ...res.data,
        posts: postsListData?.getPostList?.edges || []
      },
      vars
    }
  }
}
